// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id         String      @id @default(uuid())
  name       String
  email      String      @unique
  password   String
  address    String?
  phone      String?
  admin      Boolean     @default(false)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  deletedAt  DateTime?
  restaurant Restaurant?
  Order      Order[]
}

model Restaurant {
  id          String    @id @default(uuid())
  name        String
  description String
  slug        String    @unique
  address     String
  phone       String
  image       String
  admin       Account   @relation(fields: [adminId], references: [id])
  adminId     String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  Dish        Dish[]
  Order       Order[]
}

model Dish {
  id            String          @id @default(uuid())
  name          String
  description   String
  price         Float?
  new_price     Float
  image         String
  restaurant    Restaurant      @relation(fields: [restaurantId], references: [id])
  restaurantId  String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  deletedAt     DateTime?
  DishesInOrder DishesInOrder[]
}

model Order {
  id            String          @id @default(uuid())
  name          String
  address       String
  phone         String
  status        String          @default("pending")
  account       Account         @relation(fields: [accountId], references: [id])
  accountId     String
  restaurant    Restaurant      @relation(fields: [restaurantId], references: [id])
  restaurantId  String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  deletedAt     DateTime?
  DishesInOrder DishesInOrder[]
}

model DishesInOrder {
  id        String    @id @default(uuid())
  quantity  Int
  dish      Dish      @relation(fields: [dishId], references: [id])
  dishId    String
  order     Order     @relation(fields: [orderId], references: [id])
  orderId   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@unique([dishId, orderId])
}
